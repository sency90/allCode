#include <stdio.h>

long long int arr[101][101][101];
// 계산은 3차원 배열 형태로 할 것이므로 N, L, R 최대 100인 것을 감안하여 3차원 배열 선언
// 빌딩을 나열하여 나올수 있는 경우의 수는 n팩토리얼 가지인데 N값이 커지면 int타입의 크기를 벗어날 수 있으므로 
// 데이터 타입을 크게 선언

int main(){
	// 가짓수를 나눌 상수 선언
	int N = 0, R = 0, L = 0;
	scanf("%d %d %d", &N, &L, &R);

	arr[1][1][1] = 1, arr[2][2][1] = 1, arr[2][1][2] = 1;
	// 차후 동적 프로그래밍 기법을 사용하여 값을 계산할 때 index값이 음수가 나오지 않도록 1에서 부터 시작
	// 빌딩이 1개일 때와 빌딩이 2개일 때 보이는 가짓수는 1가지로 정해져있음
	for(int i = 3; i<=N; i++){
		arr[i][i][1] = 1, arr[i][1][i] = 1;
		// 빌딩이 하나 추가될 때 오름차순, 내림차순으로 정렬된 빌딩 순서의 경우의 수는 1가지이므로 arr[i][i][1]. arr[i][1][i]에 1을 저장
		for(int j = 1; j<=N; j++){
			for(int k = 1; k<=N; k++){
					arr[i][j][k] = ((arr[i-1][j][k] * (i-2)) + arr[i-1][j-1][k] + arr[i-1][j][k-1]) % 1000000007;
					// 동적 프로그래밍을 사용하여 배열에 i, j, k에 해당되는 곳에 결과를 저장
			}
		}	
	}

	printf("%d\n", arr[N][L][R]);
	// N, R, L에 해당하는 배열값을 출력
	return 0;
}