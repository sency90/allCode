#############################################################################
# Makefile for building: metric
# Generated by qmake (1.07a) (Qt 3.3.3) on: Fri Jun  3 21:57:47 2016
# Project:  metric.pro
# Template: app
# Command: $(QMAKE) -spec /mnt/nfs/qte-3.3.3/mkspecs/qws/linux-ipaq-g++ -o Makefile metric.pro
#############################################################################

####### Compiler, tools and options

CC       = arm-linux-gcc
CXX      = arm-linux-g++ -DQT_QWS_IPAQ
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED
CXXFLAGS = -pipe -DQWS -fno-exceptions -fno-rtti -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/mnt/nfs/qte-3.3.3/mkspecs/qws/linux-ipaq-g++ -I. -I../../../../include -I.ui/ -I. -I.moc/
LINK     = arm-linux-g++
LFLAGS   =  -Wl,-rpath,/mnt/nfs/qte-3.3.3/lib
LIBS     = $(SUBLIBS) -L/mnt/nfs/qte-3.3.3/lib -lqte-mt -ldl -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = /mnt/nfs/qte-3.3.3/bin/moc
UIC      = /mnt/nfs/qte-3.3.3/bin/uic -L /mnt/nfs/qte-3.3.3/plugins
QMAKE    = /mnt/nfs/qte-3.3.3/bin/qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -R
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/

####### Files

HEADERS = 
SOURCES = main.cpp
OBJECTS = .obj/main.o \
		.obj/metric.o
FORMS = metric.ui
UICDECLS = .ui/metric.h
UICIMPLS = .ui/metric.cpp
SRCMOC   = .moc/moc_metric.cpp
OBJMOC = .obj/moc_metric.o
DIST	   = metric.pro
QMAKE_TARGET = metric
DESTDIR  = 
TARGET   = metric

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd /mnt/nfs/qte-3.3.3/src/moc && $(MAKE) )

Makefile: metric.pro ../../../../.qmake.cache /mnt/nfs/qte-3.3.3/mkspecs/qws/linux-ipaq-g++/qmake.conf ../../../../lib/libqte-mt.prl
	$(QMAKE) -spec /mnt/nfs/qte-3.3.3/mkspecs/qws/linux-ipaq-g++ -o Makefile metric.pro
qmake: 
	@$(QMAKE) -spec /mnt/nfs/qte-3.3.3/mkspecs/qws/linux-ipaq-g++ -o Makefile metric.pro

dist: 
	@mkdir -p .obj/metric && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/metric/ && $(COPY_FILE) --parents metric.ui.h .obj/metric/ && ( cd `dirname .obj/metric` && $(TAR) metric.tar metric && $(GZIP) metric.tar ) && $(MOVE) `dirname .obj/metric`/metric.tar.gz . && $(DEL_FILE) -r .obj/metric

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/main.o: main.cpp .ui/metric.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/main.o main.cpp

.ui/metric.h: metric.ui 
	$(UIC) metric.ui -o .ui/metric.h

.ui/metric.cpp: .ui/metric.h metric.ui 
	$(UIC) metric.ui -i metric.h -o .ui/metric.cpp

.obj/metric.o: .ui/metric.cpp metric.ui.h \
		.ui/metric.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/metric.o .ui/metric.cpp

.obj/moc_metric.o: .moc/moc_metric.cpp  .ui/metric.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_metric.o .moc/moc_metric.cpp

.moc/moc_metric.cpp: $(MOC) .ui/metric.h
	$(MOC) .ui/metric.h -o .moc/moc_metric.cpp

####### Install

install:  

uninstall:  

