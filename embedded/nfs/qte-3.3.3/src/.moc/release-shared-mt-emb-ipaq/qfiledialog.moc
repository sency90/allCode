/****************************************************************************
** QRenameEdit meta object code from reading C++ file 'qfiledialog.cpp'
**
** Created: Fri Jun 3 22:10:27 2016
**      by: The Qt MOC ($Id: qt/moc_yacc.cpp   3.3.3   edited Aug 5 16:40 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <qmetaobject.h>
#include <qapplication.h>

#include <private/qucomextra_p.h>
#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
#error "This file was generated using the moc from 3.3.3. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

const char *QRenameEdit::className() const
{
    return "QRenameEdit";
}

QMetaObject *QRenameEdit::metaObj = 0;
static QMetaObjectCleanUp cleanUp_QRenameEdit( "QRenameEdit", &QRenameEdit::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString QRenameEdit::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QRenameEdit", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString QRenameEdit::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QRenameEdit", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* QRenameEdit::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QLineEdit::staticMetaObject();
    static const QUMethod slot_0 = {"slotReturnPressed", 0, 0 };
    static const QMetaData slot_tbl[] = {
	{ "slotReturnPressed()", &slot_0, QMetaData::Private }
    };
    static const QUMethod signal_0 = {"cancelRename", 0, 0 };
    static const QUMethod signal_1 = {"doRename", 0, 0 };
    static const QMetaData signal_tbl[] = {
	{ "cancelRename()", &signal_0, QMetaData::Protected },
	{ "doRename()", &signal_1, QMetaData::Protected }
    };
    metaObj = QMetaObject::new_metaobject(
	"QRenameEdit", parentObject,
	slot_tbl, 1,
	signal_tbl, 2,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_QRenameEdit.setMetaObject( metaObj );
    return metaObj;
}

void* QRenameEdit::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "QRenameEdit" ) )
	return this;
    return QLineEdit::qt_cast( clname );
}

// SIGNAL cancelRename
void QRenameEdit::cancelRename()
{
    activate_signal( staticMetaObject()->signalOffset() + 0 );
}

// SIGNAL doRename
void QRenameEdit::doRename()
{
    activate_signal( staticMetaObject()->signalOffset() + 1 );
}

bool QRenameEdit::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: slotReturnPressed(); break;
    default:
	return QLineEdit::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool QRenameEdit::qt_emit( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->signalOffset() ) {
    case 0: cancelRename(); break;
    case 1: doRename(); break;
    default:
	return QLineEdit::qt_emit(_id,_o);
    }
    return TRUE;
}
#ifndef QT_NO_PROPERTIES

bool QRenameEdit::qt_property( int id, int f, QVariant* v)
{
    return QLineEdit::qt_property( id, f, v);
}

bool QRenameEdit::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES


const char *QFileListBox::className() const
{
    return "QFileListBox";
}

QMetaObject *QFileListBox::metaObj = 0;
static QMetaObjectCleanUp cleanUp_QFileListBox( "QFileListBox", &QFileListBox::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString QFileListBox::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QFileListBox", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString QFileListBox::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QFileListBox", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* QFileListBox::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QListBox::staticMetaObject();
    static const QUMethod slot_0 = {"rename", 0, 0 };
    static const QUMethod slot_1 = {"cancelRename", 0, 0 };
    static const QUMethod slot_2 = {"doubleClickTimeout", 0, 0 };
    static const QUMethod slot_3 = {"changeDirDuringDrag", 0, 0 };
    static const QUMethod slot_4 = {"dragObjDestroyed", 0, 0 };
    static const QUParameter param_slot_5[] = {
	{ 0, &static_QUType_int, 0, QUParameter::In },
	{ 0, &static_QUType_int, 0, QUParameter::In }
    };
    static const QUMethod slot_5 = {"contentsMoved", 2, param_slot_5 };
    static const QMetaData slot_tbl[] = {
	{ "rename()", &slot_0, QMetaData::Private },
	{ "cancelRename()", &slot_1, QMetaData::Private },
	{ "doubleClickTimeout()", &slot_2, QMetaData::Private },
	{ "changeDirDuringDrag()", &slot_3, QMetaData::Private },
	{ "dragObjDestroyed()", &slot_4, QMetaData::Private },
	{ "contentsMoved(int,int)", &slot_5, QMetaData::Private }
    };
    metaObj = QMetaObject::new_metaobject(
	"QFileListBox", parentObject,
	slot_tbl, 6,
	0, 0,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_QFileListBox.setMetaObject( metaObj );
    return metaObj;
}

void* QFileListBox::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "QFileListBox" ) )
	return this;
    return QListBox::qt_cast( clname );
}

bool QFileListBox::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: rename(); break;
    case 1: cancelRename(); break;
    case 2: doubleClickTimeout(); break;
    case 3: changeDirDuringDrag(); break;
    case 4: dragObjDestroyed(); break;
    case 5: contentsMoved((int)static_QUType_int.get(_o+1),(int)static_QUType_int.get(_o+2)); break;
    default:
	return QListBox::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool QFileListBox::qt_emit( int _id, QUObject* _o )
{
    return QListBox::qt_emit(_id,_o);
}
#ifndef QT_NO_PROPERTIES

bool QFileListBox::qt_property( int id, int f, QVariant* v)
{
    return QListBox::qt_property( id, f, v);
}

bool QFileListBox::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES


const char *QFileDialogQFileListView::className() const
{
    return "QFileDialogQFileListView";
}

QMetaObject *QFileDialogQFileListView::metaObj = 0;
static QMetaObjectCleanUp cleanUp_QFileDialogQFileListView( "QFileDialogQFileListView", &QFileDialogQFileListView::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString QFileDialogQFileListView::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QFileDialogQFileListView", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString QFileDialogQFileListView::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QFileDialogQFileListView", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* QFileDialogQFileListView::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QListView::staticMetaObject();
    static const QUMethod slot_0 = {"rename", 0, 0 };
    static const QUMethod slot_1 = {"cancelRename", 0, 0 };
    static const QUParameter param_slot_2[] = {
	{ "column", &static_QUType_int, 0, QUParameter::In }
    };
    static const QUMethod slot_2 = {"changeSortColumn2", 1, param_slot_2 };
    static const QUMethod slot_3 = {"doubleClickTimeout", 0, 0 };
    static const QUMethod slot_4 = {"changeDirDuringDrag", 0, 0 };
    static const QUMethod slot_5 = {"dragObjDestroyed", 0, 0 };
    static const QUParameter param_slot_6[] = {
	{ 0, &static_QUType_int, 0, QUParameter::In },
	{ 0, &static_QUType_int, 0, QUParameter::In }
    };
    static const QUMethod slot_6 = {"contentsMoved", 2, param_slot_6 };
    static const QMetaData slot_tbl[] = {
	{ "rename()", &slot_0, QMetaData::Private },
	{ "cancelRename()", &slot_1, QMetaData::Private },
	{ "changeSortColumn2(int)", &slot_2, QMetaData::Private },
	{ "doubleClickTimeout()", &slot_3, QMetaData::Private },
	{ "changeDirDuringDrag()", &slot_4, QMetaData::Private },
	{ "dragObjDestroyed()", &slot_5, QMetaData::Private },
	{ "contentsMoved(int,int)", &slot_6, QMetaData::Private }
    };
    metaObj = QMetaObject::new_metaobject(
	"QFileDialogQFileListView", parentObject,
	slot_tbl, 7,
	0, 0,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_QFileDialogQFileListView.setMetaObject( metaObj );
    return metaObj;
}

void* QFileDialogQFileListView::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "QFileDialogQFileListView" ) )
	return this;
    return QListView::qt_cast( clname );
}

bool QFileDialogQFileListView::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: rename(); break;
    case 1: cancelRename(); break;
    case 2: changeSortColumn2((int)static_QUType_int.get(_o+1)); break;
    case 3: doubleClickTimeout(); break;
    case 4: changeDirDuringDrag(); break;
    case 5: dragObjDestroyed(); break;
    case 6: contentsMoved((int)static_QUType_int.get(_o+1),(int)static_QUType_int.get(_o+2)); break;
    default:
	return QListView::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool QFileDialogQFileListView::qt_emit( int _id, QUObject* _o )
{
    return QListView::qt_emit(_id,_o);
}
#ifndef QT_NO_PROPERTIES

bool QFileDialogQFileListView::qt_property( int id, int f, QVariant* v)
{
    return QListView::qt_property( id, f, v);
}

bool QFileDialogQFileListView::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES


const char *QFDProgressAnimation::className() const
{
    return "QFDProgressAnimation";
}

QMetaObject *QFDProgressAnimation::metaObj = 0;
static QMetaObjectCleanUp cleanUp_QFDProgressAnimation( "QFDProgressAnimation", &QFDProgressAnimation::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString QFDProgressAnimation::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QFDProgressAnimation", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString QFDProgressAnimation::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QFDProgressAnimation", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* QFDProgressAnimation::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QWidget::staticMetaObject();
    static const QUMethod slot_0 = {"next", 0, 0 };
    static const QMetaData slot_tbl[] = {
	{ "next()", &slot_0, QMetaData::Private }
    };
    metaObj = QMetaObject::new_metaobject(
	"QFDProgressAnimation", parentObject,
	slot_tbl, 1,
	0, 0,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_QFDProgressAnimation.setMetaObject( metaObj );
    return metaObj;
}

void* QFDProgressAnimation::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "QFDProgressAnimation" ) )
	return this;
    return QWidget::qt_cast( clname );
}

bool QFDProgressAnimation::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: next(); break;
    default:
	return QWidget::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool QFDProgressAnimation::qt_emit( int _id, QUObject* _o )
{
    return QWidget::qt_emit(_id,_o);
}
#ifndef QT_NO_PROPERTIES

bool QFDProgressAnimation::qt_property( int id, int f, QVariant* v)
{
    return QWidget::qt_property( id, f, v);
}

bool QFDProgressAnimation::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES


const char *QFDProgressDialog::className() const
{
    return "QFDProgressDialog";
}

QMetaObject *QFDProgressDialog::metaObj = 0;
static QMetaObjectCleanUp cleanUp_QFDProgressDialog( "QFDProgressDialog", &QFDProgressDialog::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString QFDProgressDialog::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QFDProgressDialog", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString QFDProgressDialog::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QFDProgressDialog", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* QFDProgressDialog::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QDialog::staticMetaObject();
    static const QUMethod signal_0 = {"cancelled", 0, 0 };
    static const QMetaData signal_tbl[] = {
	{ "cancelled()", &signal_0, QMetaData::Public }
    };
    metaObj = QMetaObject::new_metaobject(
	"QFDProgressDialog", parentObject,
	0, 0,
	signal_tbl, 1,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_QFDProgressDialog.setMetaObject( metaObj );
    return metaObj;
}

void* QFDProgressDialog::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "QFDProgressDialog" ) )
	return this;
    return QDialog::qt_cast( clname );
}

// SIGNAL cancelled
void QFDProgressDialog::cancelled()
{
    activate_signal( staticMetaObject()->signalOffset() + 0 );
}

bool QFDProgressDialog::qt_invoke( int _id, QUObject* _o )
{
    return QDialog::qt_invoke(_id,_o);
}

bool QFDProgressDialog::qt_emit( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->signalOffset() ) {
    case 0: cancelled(); break;
    default:
	return QDialog::qt_emit(_id,_o);
    }
    return TRUE;
}
#ifndef QT_NO_PROPERTIES

bool QFDProgressDialog::qt_property( int id, int f, QVariant* v)
{
    return QDialog::qt_property( id, f, v);
}

bool QFDProgressDialog::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES
