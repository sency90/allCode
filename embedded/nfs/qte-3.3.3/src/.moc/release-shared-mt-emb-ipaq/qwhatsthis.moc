/****************************************************************************
** QWhatsThisButton meta object code from reading C++ file 'qwhatsthis.cpp'
**
** Created: Fri Jun 3 22:10:15 2016
**      by: The Qt MOC ($Id: qt/moc_yacc.cpp   3.3.3   edited Aug 5 16:40 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <qmetaobject.h>
#include <qapplication.h>

#include <private/qucomextra_p.h>
#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
#error "This file was generated using the moc from 3.3.3. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

const char *QWhatsThisButton::className() const
{
    return "QWhatsThisButton";
}

QMetaObject *QWhatsThisButton::metaObj = 0;
static QMetaObjectCleanUp cleanUp_QWhatsThisButton( "QWhatsThisButton", &QWhatsThisButton::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString QWhatsThisButton::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QWhatsThisButton", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString QWhatsThisButton::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QWhatsThisButton", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* QWhatsThisButton::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QToolButton::staticMetaObject();
    static const QUMethod slot_0 = {"mouseReleased", 0, 0 };
    static const QMetaData slot_tbl[] = {
	{ "mouseReleased()", &slot_0, QMetaData::Public }
    };
    metaObj = QMetaObject::new_metaobject(
	"QWhatsThisButton", parentObject,
	slot_tbl, 1,
	0, 0,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_QWhatsThisButton.setMetaObject( metaObj );
    return metaObj;
}

void* QWhatsThisButton::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "QWhatsThisButton" ) )
	return this;
    return QToolButton::qt_cast( clname );
}

bool QWhatsThisButton::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: mouseReleased(); break;
    default:
	return QToolButton::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool QWhatsThisButton::qt_emit( int _id, QUObject* _o )
{
    return QToolButton::qt_emit(_id,_o);
}
#ifndef QT_NO_PROPERTIES

bool QWhatsThisButton::qt_property( int id, int f, QVariant* v)
{
    return QToolButton::qt_property( id, f, v);
}

bool QWhatsThisButton::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES


const char *QWhatsThat::className() const
{
    return "QWhatsThat";
}

QMetaObject *QWhatsThat::metaObj = 0;
static QMetaObjectCleanUp cleanUp_QWhatsThat( "QWhatsThat", &QWhatsThat::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString QWhatsThat::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QWhatsThat", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString QWhatsThat::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QWhatsThat", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* QWhatsThat::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QWidget::staticMetaObject();
    static const QUMethod slot_0 = {"hide", 0, 0 };
    static const QUMethod slot_1 = {"widgetDestroyed", 0, 0 };
    static const QMetaData slot_tbl[] = {
	{ "hide()", &slot_0, QMetaData::Public },
	{ "widgetDestroyed()", &slot_1, QMetaData::Public }
    };
    metaObj = QMetaObject::new_metaobject(
	"QWhatsThat", parentObject,
	slot_tbl, 2,
	0, 0,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_QWhatsThat.setMetaObject( metaObj );
    return metaObj;
}

void* QWhatsThat::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "QWhatsThat" ) )
	return this;
    return QWidget::qt_cast( clname );
}

bool QWhatsThat::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: hide(); break;
    case 1: widgetDestroyed(); break;
    default:
	return QWidget::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool QWhatsThat::qt_emit( int _id, QUObject* _o )
{
    return QWidget::qt_emit(_id,_o);
}
#ifndef QT_NO_PROPERTIES

bool QWhatsThat::qt_property( int id, int f, QVariant* v)
{
    return QWidget::qt_property( id, f, v);
}

bool QWhatsThat::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES


const char *QWhatsThisPrivate::className() const
{
    return "QWhatsThisPrivate";
}

QMetaObject *QWhatsThisPrivate::metaObj = 0;
static QMetaObjectCleanUp cleanUp_QWhatsThisPrivate( "QWhatsThisPrivate", &QWhatsThisPrivate::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString QWhatsThisPrivate::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QWhatsThisPrivate", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString QWhatsThisPrivate::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "QWhatsThisPrivate", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* QWhatsThisPrivate::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QObject::staticMetaObject();
    static const QUMethod slot_0 = {"cleanupWidget", 0, 0 };
    static const QMetaData slot_tbl[] = {
	{ "cleanupWidget()", &slot_0, QMetaData::Private }
    };
    metaObj = QMetaObject::new_metaobject(
	"QWhatsThisPrivate", parentObject,
	slot_tbl, 1,
	0, 0,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_QWhatsThisPrivate.setMetaObject( metaObj );
    return metaObj;
}

void* QWhatsThisPrivate::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "QWhatsThisPrivate" ) )
	return this;
    return QObject::qt_cast( clname );
}

bool QWhatsThisPrivate::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: cleanupWidget(); break;
    default:
	return QObject::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool QWhatsThisPrivate::qt_emit( int _id, QUObject* _o )
{
    return QObject::qt_emit(_id,_o);
}
#ifndef QT_NO_PROPERTIES

bool QWhatsThisPrivate::qt_property( int id, int f, QVariant* v)
{
    return QObject::qt_property( id, f, v);
}

bool QWhatsThisPrivate::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES
