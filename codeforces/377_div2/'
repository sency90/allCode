#include <cstdio>
#include <algorithm>
#include <cstring>
#include <vector>
using namespace std;
typedef pair<int,int> pii;
vector<int> p;
vector<pii> adap;
int ans2[200001], ans[200001];
int main() {
    int n,m;
    scanf("%d%d",&n,&m);
    p.resize(n);
    for(int i=0; i<n; i++) {
        scanf("%d",&p[i]);
    }
    for(int i=0; i<m; i++) {
        int x; scanf("%d",&x);
        adap.push_back({x,i});
    }
    auto cmp = [](const pii &l, const pii &r)->bool{ return l.first>r.first; };
    sort(adap.begin(), adap.end(), cmp);
    int comcnt=0, adapcnt=0;
    for(int i=0; i<m; i++) {
        int t=adap[i].first;
        while(true) {
            auto it = lower_bound(p.begin(), p.end(), t);
            if(*it == t) {
                ans[adap[i].second]=adapcnt;
                ans2[it-p.begin()]=adap[i].second+1;
                *it=0;
                comcnt++;
                break;
            } else if(t==1) break;
            else {
                t=(adap[i].first>>1)+(adap[i].first&1);
                adapcnt++;
            }
        }
    }
    printf("%d %d\n", comcnt, adapcnt);
    for(int i=0; i<m; i++) printf("%d ", ans[i]);
    for(int i=0; i<n; i++) printf("%d ", ans2[i]);
    return 0;
}
